{"version":3,"sources":["components/Todo.js","components/Form.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todos","setTodos","el","className","completed","name","onClick","map","item","key","class","filter","s","Form","inputText","setInputText","id","value","onChange","e","target","type","preventDefault","Math","random","Todolist","LOCAL_STORAGE_KEY","App","useState","useEffect","todoStorage","JSON","parse","localStorage","getItem","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEe,SAASA,EAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAUC,EAAK,EAALA,GAkB3C,OAEI,sBAAKC,UAAS,eAAUD,EAAGE,UAAU,YAAY,IAAjD,UACI,oBAAID,UAAS,oBAAgBD,EAAGE,UAAU,iBAAiB,IAA3D,SAAkEF,EAAGG,OACrE,sBAAKF,UAAU,WAAf,UACI,wBAAQG,QAjBK,WACrBL,EAASD,EAAMO,KAAI,SAAAC,GACf,OAAGA,EAAKC,MAAMP,EAAGO,IACN,2BACAD,GADP,IACaJ,WAAYF,EAAGE,YAGzBI,OAUgCL,UAAW,gBAA9C,SAA8D,mBAAGO,MAAM,yBACvE,wBAAQJ,QArBQ,WACxBL,EAASD,EAAMW,QAAO,SAACC,GAAD,OAAOA,EAAEH,MAAMP,EAAGO,SAoBMN,UAAU,aAAhD,SAA6D,mBAAGO,MAAM,mCCHvEG,MAnBf,YAA0D,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,aAAcf,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SAU3C,OACI,uBAAME,UAAU,iBAAiBa,GAAG,YAApC,UACI,oBAAIb,UAAU,eAAd,mBACA,uBAAOc,MAAOH,EAAWI,SAZT,SAACC,GACrBJ,EAAaI,EAAEC,OAAOH,QAWiCI,KAAK,OAAQlB,UAAU,eAC1E,uBAAOG,QAVQ,SAACa,GACpBA,EAAEG,iBACFrB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACK,KAAMS,EAAWV,WAAW,EAAOK,IAAmB,IAAdc,KAAKC,aAElET,EAAa,KAMuBM,KAAK,SAAShB,KAAK,SAASF,UAAU,MAAMc,MAAM,iBChB/E,SAASQ,EAAT,GAAsC,IAAnBzB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAMrC,OACI,sBAAKE,UAAW,iBAAhB,UACI,oBAAIA,UAAW,YAAf,SACKH,EAAMO,KAAI,SAACL,GAAD,OACP,cAACH,EAAD,CAAMG,GAAIA,EAAIF,MAAOA,EAAOC,SAAUA,GAAgBD,EAAMS,UAGrE,sBAAKN,UAAU,qBAAf,cAAsC,wBAAQG,QAXvB,WAC1BL,EAASD,EAAMW,QAAO,SAACC,GAAD,OAAqB,IAAdA,EAAER,eAUiDD,UAAW,mBAAlD,kCCTjD,IAAMuB,EAAoB,gBAmCXC,MA/Bf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOd,EAAP,KAAkBC,EAAlB,KACA,EAAyBa,mBAAS,IAAlC,mBAAO5B,EAAP,KAAcC,EAAd,KAgBA,OAXF4B,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQR,IAEjDI,GAAa7B,EAAS6B,KACxB,IAEHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUpC,MACtD,CAACA,IAIA,sBAAKG,UAAU,MAAf,UACE,iCACE,6CAEF,cAAC,EAAD,CAAMW,UAAWA,EAAWC,aAAcA,EAAcf,MAAOA,EAAOC,SAAUA,IAChF,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAWA,QCtB1BoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1755e349.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({todos, setTodos, el}) {\n    \n    \n    const deleteButtonHandler = () => {\n        setTodos(todos.filter((s) => s.key!==el.key));\n    }\n    const completedHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.key===el.key){\n                return {\n                    ...item, completed: !el.completed,\n                }\n            }\n            return item;\n        }))     \n        \n    }\n    \n    return (\n        \n        <div className={`todo ${el.completed?\"strike-th\":\"\"}`}>\n            <li className= {`todo-item ${el.completed?\"strike-through\":\"\"}`}>{el.name}</li>\n            <div className=\"todo-btn\">\n                <button onClick={completedHandler} className= \" complete-btn\"><i class=\"fas fa-check fa-3x\"></i></button>\n                <button onClick={deleteButtonHandler} className=\" trash-btn\"><i class=\"fas fa-backspace fa-3x\"></i></button>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useRef} from 'react';\nimport Todo from './Todo';\n    let ids = 0;// id for each todo object\n\nfunction Form({inputText, setInputText, todos, setTodos}){\n    const setInputHandler = (e) =>{\n        setInputText(e.target.value);\n    }\n    const setTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([...todos, {name: inputText, completed: false, key: Math.random()*1000},\n        ]);\n        setInputText(\"\");\n    }\n    return(\n        <form className=\"task-container\" id=\"task-form\">\n            <h2 className=\"task-heading\">Task:</h2>\n            <input value={inputText} onChange={setInputHandler}type=\"text\"  className=\"text-field\"></input>\n            <input onClick={setTodoHandler} type=\"submit\" name=\"submit\" className=\"btn\" value=\"Add Task\"></input> \n        </form>\n    );\n}\n\nexport default Form;\n// function Form({inputText, setInputText, todos, setTodos}){\n//     function inputTextHandler(e) {\n//         console.log(e.target.value);\n//         setInputText(e.target.value)\n//     }\n//     function submitTodoHandler(e){\n//         e.preventDefault();\n//         setTodos([...todos, {text: inputText, completed: false, id: id+=1}\n//         ]);\n//         setInputText(\"\");\n//     }","import React from 'react'\nimport Todo from './Todo'\nexport default function Todolist({todos, setTodos}) {\n\n    const deleteFinishedHandler = () =>{\n        setTodos(todos.filter((s) => s.completed===false));\n    }\n    \n    return (\n        <div className= \"todo-container\">\n            <ul className= \"todo-list\">\n                {todos.map((el)=> (\n                    <Todo el={el} todos={todos} setTodos={setTodos}  key={todos.key}/>\n                ))}\n            </ul>\n           <div className=\"finished-container\" > <button onClick={deleteFinishedHandler}className= \"btn finished-btn\">Clear Finished</button>\n           </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/Todolist';\nimport Todo from './components/Todo'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos]= useState([]);\n\n\n\n//get todo from local memory\nuseEffect(()=> {\n  const todoStorage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) \n  \n  if(todoStorage){setTodos(todoStorage)}\n}, [])\n//store todo to local memory\nuseEffect(()=> {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n}, [todos])\n\n  \n  return (\n    <div className=\"App\">\n      <header>  \n        <h1>Todo List</h1>\n      </header> \n      <Form inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos}/>\n      <TodoList todos={todos} setTodos= {setTodos}/>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}